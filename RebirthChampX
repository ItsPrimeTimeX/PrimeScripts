local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local loadedKey = loadstring(game:HttpGet('https://pastebin.com/raw/d1JrNq4K'))()

getgenv().inputKey = ""

function LoadMain()
    local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
    -- Script Here
	local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
	local Window = OrionLib:MakeWindow({Name = "Rebirth Champions XüéñÔ∏è |       PrimeTimeScripts", HidePremium = false, IntroEnabled = false, SaveConfig = true, ConfigFolder = "OrionTest"})
	
	OrionLib:MakeNotification({
		Name = "Want more Free UGC Scripts?",
		Content = "Join the discord: https://discord.gg/e7vX9VcHBh",
		Image = "rbxassetid://4483345998",
		Time = 10
	})
	--------------------------------------------------------
	-- Values
	--------------------------------------------------------
	_G.AutoClick = true
	_G.AutoRebirth = true
	_G.RebirthAmount = 1
	_G.selectUpgrade = "ClickMultiplier"
	_G.AutoUpgrade = true
	_G.selectEgg = "Common Egg"
	_G.selectAmount = "Single"
	_G.AutoHatch = true
	_G.AutoCraft = true
	----------------------------------------------------------------------------------------------------------------------------
	--Functions
	----------------------------------------------------------------------------------------------------------------------------
	function AutoClick()
		while _G.AutoClick == true do
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Click3"):FireServer()
			wait()
		end
	end
	
	function AutoRebirth()
		while _G.AutoRebirth == true do
			local args = {
				[1] = _G.RebirthAmount
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Rebirth"):FireServer(unpack(args))
			wait(3)
		end
	end
	
	function AutoHatch()
		while _G.AutoHatch == true do
			local args = {
				[1] = _G.selectEgg,
				[2] = _G.selectAmount
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("Unbox"):InvokeServer(unpack(args))
			wait()
		end
	end
	
	function AutoCraft()
		while _G.AutoCraft == true do
			local args = {
				[1] = "CraftAll",
				[2] = {}
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("Request"):InvokeServer(unpack(args))        
			wait()
		end
	end
	
	
	function AutoUpgrade()
		while _G.AutoUpgrade == true do
			local args = {
				[1] = _G.selectUpgrade
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("Upgrade"):InvokeServer(unpack(args))   
			wait(3)
		end
	end
	--------------------------------------------------------------------------------------------------------------------------------------------
	--Tabs
	--------------------------------------------------------------------------------------------------------------------------------------------
	local MainTab = Window:MakeTab({
		Name = "Main",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})
	
	local EggTab = Window:MakeTab({
		Name = "Eggs",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})
	
	local UpgradeTab = Window:MakeTab({
		Name = "Upgrades",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})
	
	local MiscTab = Window:MakeTab({
		Name = "Misc",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})
	---------------------------------------------------------------------------------------------------------------------------------------------
	--Sections
	---------------------------------------------------------------------------------------------------------------------------------------------
	local AutoSection = MainTab:AddSection({
		Name = "Auto"
	})
	
	local RebirthSection = MainTab:AddSection({
		Name = "Rebirths"
	})
	
	
	local PlayerSection = MiscTab:AddSection({
		Name = "Player"
	})
	
	local OtherSection = MiscTab:AddSection({
		Name = "Other"
	})
	-----------------------------------------------------------------------------------------------------------------------------------------------
	--Toggles
	-----------------------------------------------------------------------------------------------------------------------------------------------
	AutoSection:AddToggle({
		Name = "Auto Click",
		Default = false,
		Callback = function(Value)
			_G.AutoClick = Value
			AutoClick()
		end    
	})
	
	AutoSection:AddToggle({
		Name = "Auto Rebirth",
		Default = false,
		Callback = function(Value)
			_G.AutoRebirth = Value
			AutoRebirth()
		end    
	})
	
	
	EggTab:AddToggle({
		Name = "Auto Hatch",
		Default = false,
		Callback = function(Value)
			_G.AutoHatch = Value
			AutoHatch()
		end    
	})
	
	EggTab:AddToggle({
		Name = "Auto Craft",
		Default = false,
		Callback = function(Value)
			_G.AutoCraft = Value
			AutoCraft()
		end    
	})
	
	
	UpgradeTab:AddToggle({
		Name = "Auto Upgrade",
		Default = false,
		Callback = function(Value)
			_G.AutoUpgrade = Value
			AutoUpgrade()
		end    
	})
	--------------------------------------------------------------------------------------------------------------------------------
	--Dropdowns
	-------------------------------------------------------------------------------------------------------------------------------
	RebirthSection:AddDropdown({
		Name = "Select Rebirth Amount",
		Default = 1,
		Options = {1, 2, 3, 4, 5, 6},
		Callback = function(Value)
			_G.RebirthAmount = Value
		end    
	})
	
	EggTab:AddDropdown({
		Name = "Select Egg",
		Default = "Basic",
		Options = {"Basic", "Mythic", "Alien", "Ancient", "Ancient Egypt", "Aqua", "Atlantis", "Axolotl", "Beach", "Bee World", "Black Hole", "Cave", "Crystal", "Cyber", "Desert", "Destruction", "Dragon", "Exotic Islant", "Fairy", "Fantasy", "Fantasy Glacier", "Fantasy Jungle", "Fantasy Spawn", "Fishing Village", "Forest", "Hacker", "Haunted Castle", "Heaven", "Hell", "King", "Lava", "Magic", "Mars", "Medieval Castle", "Miner", "Molten", "Moon", "Mystic Swamp", "Neon", "Nuclear", "Ocean", "Pirate", "Pixel", "Prehistoric", "Rainbow World", "Saturn", "Sea Cave", "Shadow", "Space", "SpaceLab", "Spooky", "Steampunk", "Sun", "Time Spawn", "Underwater Lab", "Void", "Volcano", "Water", "Wild West", "Winter"},
		Callback = function(Value)
			_G.selectEgg = Value
		end    
	})
	
	EggTab:AddDropdown({
		Name = "Select Amount",
		Default = "Single",
		Options = {"Single", "Triple"},
		Callback = function(Value)
			_G.selectAmount = Value
		end    
	})
	
	UpgradeTab:AddDropdown({
		Name = "Select Upgrade",
		Default = "ClickMultiplier",
		Options = {"ClickMultiplier", "GemsMultiplier"},
		Callback = function(Value)
			_G.selectEgg = Value
		end    
	})
	-----------------------------------------------------------------------------------------------------------------------------------
	-- Buttons
	-----------------------------------------------------------------------------------------------------------------------------------
	OtherSection:AddButton({
		Name = "Anti-AFK",
		Callback = function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/KazeOnTop/Rice-Anti-Afk/main/Wind", true))()
		  end    
	})
	
	OtherSection:AddButton({
		Name = "Destroy GUI",
		Callback = function()
			OrionLib:Destroy()
		  end    
	})
	
	PlayerSection:AddSlider({
		Name = "WalkSpeed",
		Min = 16,
		Max = 200,
		Default = 16,
		Color = Color3.fromRGB(255,255,255),
		Increment = 1,
		ValueName = "Speed",
		Callback = function(Value)
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
		end    
	})
	
	
	
	
	OrionLib:Init()
	
	 
	-- Open / Close
	-- Instances:
	
	local ScreenGui = Instance.new("ScreenGui")
	local TextButton = Instance.new("TextButton")
	local UICorner = Instance.new("UICorner")
	
	--Properties:
	
	ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	
	TextButton.Parent = ScreenGui
	TextButton.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextButton.BorderSizePixel = 0
	TextButton.Position = UDim2.new(0.790000021, 0, 0.931999981, 0)
	TextButton.Size = UDim2.new(0.0350000001, 0, 0.061999999, 0)
	TextButton.Font = Enum.Font.FredokaOne
	TextButton.Text = "Close"
	TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextButton.TextScaled = true
	TextButton.TextSize = 14.000
	TextButton.TextWrapped = true
	
	UICorner.CornerRadius = UDim.new(0, 15)
	UICorner.Parent = TextButton
	
	-- Scripts:
	
	local function TCDOEUB_fake_script() -- TextButton.LocalScript 
		local script = Instance.new('LocalScript', TextButton)
	
		local settingsButton = script.Parent
		
		local isVisible = false
		
		local function updateButton()
			if isVisible then
				settingsButton.Text = "Show"
			else
				settingsButton.Text = "Hide"
			end
		end
		
		local function executeScript()
			if isVisible then
				-- Execute the script for showing the menu, replace "loadstring(game:HttpGet("https://raw.githubusercontent.com/ItsPrimeTimeX/PunchingSim/main/PunchHub", true))()" with the desired script
				loadstring(game:HttpGet("https://raw.githubusercontent.com/ItsPrimeTimeX/PrimeScripts/main/RebirthChampX", true))()
			else
				-- Execute the script for hiding the menu, replace "OrionLib:Destroy()" with the desired script
				OrionLib:Destroy()
			end
			isVisible = not isVisible
			updateButton()
		end
		
		settingsButton.MouseButton1Click:Connect(executeScript)
		updateButton()
	end
	coroutine.wrap(TCDOEUB_fake_script)()


   
end

function readKey()
    if readfile("/primekey/key.txt") == loadedKey then
            OrionLib:MakeNotification({
                Name = "Your Key In Your Local Storage Is Incorrect",
                Content = "Key may have been updated, It changes everyday! Please re-enter the key!",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
            LoadMain()
        else
            OrionLib:MakeNotification({
                Name = "Checking For Key",
                Content = "Checked local storage for key, It may have changed.",
                Image = "rbxassetid://4483345998",
                Time = 5
            })

            local Window = OrionLib:MakeWindow({Name = "PrimeTimeScripts Key Systemüîê", HidePremium = false, IntroEnabled = false, SaveConfig = true, ConfigFolder = "OrionTest"})

            local Tab = Window:MakeTab({
                Name = "Key",
                Icon = "rbxassetid://4483345998",
                PremiumOnly = false
            })
            Tab:AddTextbox({
                Name = "Key:",
                Default = "",
                TextDisappear = true,
                Callback = function(Text)
                    getgenv().inputKey = Text
                end,
            })

            Tab:AddButton({
                Name = "Submit Key",
                Callback = function()
                if getgenv().inputKey == loadedKey then
                    writefile("/primekey/key.txt", loadedKey)
                    
                    OrionLib:MakeNotification({
                        Name = "Correct Key",
                        Content = "Loading Main",
                        Image = "rbxassetid://4483345998",
                        Time = 3
                    })
                    task.wait(3)
                    
                    OrionLib:Destroy()
                    LoadMain()
                else
                    OrionLib:MakeNotification({
                        Name = "Incorrect Key",
                        Content = "The key you entered is not correct!",
                        Image = "rbxassetid://4483345998",
                        Time = 3
                    })
                end
                end,
             })

             Tab:AddButton({
                Name = "Get Key",
                Callback = function()
                      setclipboard("https://discord.gg/RurFVBhx87")
                      OrionLib:MakeNotification({
                        Name = "Coppied to clipboard",
                        Content = "Join the discord and get the key there!",
                        Image = "rbxassetid://4483345998",
                        Time = 8
                    })
                  end    
            })
           
        end
end

if isfolder ("/primekey") then
    if isfile("/primekey/key.txt", "") then
        readKey()
    else
        writefile("/primekey/key.txt", "")
        readKey()
    end
else
    makefolder("/primekey")
    writefile("/primekey/key.txt", "")
    readKey()
end



